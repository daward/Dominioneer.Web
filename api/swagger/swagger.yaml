swagger: "2.0"
info:
  version: "0.0.1"
  title: Dominioneer
# during dev, should point to your local machine
host: localhost:3000
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /games:
    x-swagger-router-controller: game_controller
    get:
      description: Gets a game for the given specifications
      operationId: generateGame
      parameters:
        - name: cards
          in: query
          description: the cards that are required to be in the chosen game
          required: false
          type: array
          items: 
            type: string
        - name: players
          in: query
          description: the players that are playing in the game (only used for optimized games)
          required: false
          type: array
          items:
            type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Game"
            
  /games/{id}:
    x-swagger-router-controller: game_controller
    get:
      description: "Gets the information about a specific game"
      operationId: getGame
      parameters:
        - name: id
          in: path
          type: string
          description: the identifier of the game
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Game"
            
  /users/{userId}/games/{gameId}/ratings/{rating}:
    x-swagger-router-controller: user_controller
    post:
      description: rates a game for a particular user
      operationId: addRating
      parameters:
        - name: userId
          in: path
          type: string
          description: the user id of a player
        - name: gameId
          in: path
          type: string
          description: the id of a game to rate 
        - name: rating
          in: path
          type: number
          description: the rating the player has given the game
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Rating"
          
  /users/{userId}/games/{gameId}/prediction:
    x-swagger-router-controller: user_controller
    get:
      description: gets a prediction for how much a user will like a game (between 0 and 1)
      operationId: predict
      parameters:
        - name: userId
          in: path
          type: string
          description: the user id of a player
        - name: gameId
          in: path
          type: string
          description: the id of a game to rate
      responses:
        "200":
          description: a successful prediction has been made
          schema:
            $ref: "#/definitions/Rating"

# complex objects have schema definitions
definitions:
  Game:
    required:
      - id
    properties:
      id:
        type: string
      cards:
        type: array
        items:
          $ref: "#/definitions/Card"
  Card:
    required:
      - name
    properties:
      name:
        type: string
      cardtype:
        type: string
      price:
        type: string
        
  Rating:
    properties:
      gameId:
        type: string
      userId:
        type: string
      rating:
        type: number